{{- $env := printf "environments/%s.yaml" (required "'environment must be provided" .Values.environment) | .Files.Get | fromYaml }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-api
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "yourballot.labels" . | nindent 4 }}
spec:
  replicas: {{ $env.api.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-api
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Chart.Name }}-api
    spec:
      volumes:
        - name: {{ .Chart.Name }}-api-db-volume
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}-api
          image: "{{ $env.image.repository }}:{{ $env.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ $env.image.pullPolicy }}
          resources:            
            {{- toYaml $env.api.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Chart.Name }}-api-db-volume
              mountPath: /mnt/db
          env:
            - name: DB_DIR_OVERRIDE
              value: /mnt/db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Chart.Name }}-api-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    {{- toYaml $env.pvc.resources | nindent 4 }}
  storageClassName: {{ .Values.pvc.storageClassName }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-api-service
  labels:
    app: {{ .Chart.Name }}-api-service
spec:
  ports:
    - port: 
      targetPort: http
      protocol: TCP
      name: http
    - port:
      targetPort: https
      protocol: TCP
      name: https
  selector:
    app: {{ .Chart.Name }}-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-ingress
  labels:
    app: {{ .Chart.Name }}-api-ingress    
  {{- if hasKey $env.ingress "annotations" }}
  annotations:
    {{- toYaml $env.ingress.annotations | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.className }}
  rules:
    - host: "{{ .Chart.Name }}.{{ .Values.ingress.baseDomain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Chart.Name }}-service
                port:
                  number: 80
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Chart.Name }}-service
                port:
                  number: 443
