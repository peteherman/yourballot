{{- $env := printf "environments/%s.yaml" (required "'environment must be provided" .Values.environment) | .Files.Get | fromYaml }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
    app: {{ .Chart.Name }}-db
spec:
  replicas: {{ $env.db.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-db
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Chart.Name }}-db        
    spec:
      volumes:
        - name: {{ .Chart.Name }}-db-volume
          persistentVolumeClaim:
            claimName: yourballot-pvc
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ $env.image.repository }}:{{ $env.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ $env.image.pullPolicy }}
          resources:            
            {{- toYaml $env.db.resources | nindent 12 }}
          volumeMounts:
            - name: {{ .Chart.Name }}-db-volume
              mountPath: /var/lib/postgresql/
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: ballot-db-user
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ballot-db-password
                  key: POSTGRES_PASSWORD            
          ports:
            - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}  
  name: {{ .Chart.Name }}-db-service
  labels:
    app: {{ .Chart.Name }}-db-service
spec:
  ports:
    - name: psql
      port: 5432
      targetPort: 5432
  selector:
    app: {{ .Chart.Name }}-db
